name: Template hello world
on:
  push:
    branches:
      - "master"
env:
  DAY_OF_WEEK: Monday
  
jobs:
  Copy_files:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_JOHAN }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_JOHAN }}
        aws-region: us-east-1
    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 sync . s3://${{ secrets.AWS_BUCKET }}/New_project
        
          
  Sonar_Cloud:
    runs-on: ubuntu-latest
    needs: [Copy_files]
    steps:
    - name: analyses
      run: |
          echo "Today is $DAY_OF_WEEK"
    - name: status sonar
      id: sonarcloud-status
      run: |
          echo "::set-output name=test::$(curl --user ${{secrets.SONAR_TOKEN}} https://sonarcloud.io/api/qualitygates/project_status?projectKey='lgmk-nodejs-backend-starter' -o response.json)"
          ls -ltr
          pwd
          echo "::set-output name=otro::$(cat ./response.json)"
          echo "::set-output name=otro2::$(cat ./response.json | jq .projectStatus.status )"
    - name: comparate status sonar
      if: ${{ steps.sonarcloud-status.outputs.otro2 == 'ERROR2'}}
      run: |
        echo "My_Variables2 ${{ steps.sonarcloud-status.outputs.otro2 }}"
      
  Test_JEST:
    runs-on: ubuntu-latest
    needs: [Sonar_Cloud]
    steps:
    - uses: actions/checkout@v3
    - name: run test
      run: |
          echo "Run test"
          ls -ltr
          
  Deploy_servelles:
    runs-on: ubuntu-latest
    needs: [Test_JEST]
    steps:
    - name: Deploy
      run: |
          echo "Metodo deploy"
  #        exit 1

  Notification:
    runs-on: ubuntu-latest
    needs: [Sonar_Cloud, Test_JEST ,Deploy_servelles]
    if: always()
    steps:
    - name: Send notification
      run: |
          echo "Status SonarCloud ${{needs.Sonar_Cloud.result}}"
          echo "Status Test_JEST ${{needs.Test_JEST.result}}"
          echo "Status Deploy_servelles ${{needs.Deploy_servelles.result}}"
          
  Notification_without:
    runs-on: ubuntu-latest
    needs: [Sonar_Cloud, Test_JEST ,Deploy_servelles]
    steps:
    - name: Send notification
      run: |
          echo "Status SonarCloud ${{needs.Sonar_Cloud.result}}"
          echo "Status Test_JEST ${{needs.Test_JEST.result}}"
          echo "Status Deploy_servelles ${{needs.Deploy_servelles.result}}"
     
  
